// f(const x:B) - not possible here
def f(x:B){
    if x{
        phase(π/2);
    }
    return x;
}

// Can't have qfree (as phase isn't qfree) and can't make x const
def g(x:B)mfree{
    if x{
        phase(π/2);
    }
    return x;
}

// a,b,y uncomputated in background
def h(const x:B)lifted{
    a := false:B;
    b := true:B;
    y := (x || a);
    z := y && b;
    return z;
}

// More examples?

def main() {
    x := 1:B;
    x := H(x);
    x := f(x);
    x := g(x);
    z := h(x);
    x := measure(x);
    print(x);
    res := measure(z);
    print(res);

    i := 12: uint[5];
    i[0] := H(i[0]);
    j := i + 3;
    t := 0:!N;

    i := measure(i);
    j := measure(j);
    print(i);
    print(j);
}