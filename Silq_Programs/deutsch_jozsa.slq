import dj_oracles;

// [Constant f, bits => 1]
def deutsch_jozsa[bits:!N](f: const uint[bits] !->qfree B) {
  x := 0:uint[bits];
  for i in [0..bits){ x[i] := H(x[i]); }

  if f(x) { phase(pi); }

  for i in [0..bits){ x[i] := H(x[i]); }
  x := measure(x);
  return x;
}
// [0]

def main() {
    bits := 3:!N;
    // Prints 0 if const, prints another number if balanced
    print(deutsch_jozsa[bits](b_oracle[bits]));
    return 0;
}