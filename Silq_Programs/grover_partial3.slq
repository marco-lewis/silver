// import grover_oracles;

def grover_partial(f : const uint[3] !->qfree B){
    x := 0:uint[3];
    x[0] := H(x[0]);
    x[1] := H(x[1]);
    x[2] := H(x[2]);
    // Oracle
    if f(x){ phase(pi); }
    // Diffusion
    x[0] := H(x[0]);
    x[1] := H(x[1]);
    x[2] := H(x[2]);
    if x!=0{ phase(pi); }
    x[0] := H(x[0]);
    x[1] := H(x[1]);
    x[2] := H(x[2]);
    
    x := measure(x);
    return x;
}



def main(){

}