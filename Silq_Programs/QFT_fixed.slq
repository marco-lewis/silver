def QFT_fixed[](q:int[3]){
    (q[2],q[0]) := (q[0],q[2]);

    q[0] := H(q[0]);
    if q[0] && q[1]{
        phase(2*π * 2^(0-1-1));
    }
    if q[0] && q[2]{
        phase(2*π * 2^(0-2-1));
    }

    q[1] := H(q[1]);
    if q[1] && q[2]{
        phase(2*π * 2^(1-2-1));
    }

    q[2] := H(q[2]);

	return q;
}

// SWAP
// for k in [0..n div 2){
// 	(ψ[k],ψ[n-k-1]) := (ψ[n-k-1],ψ[k]);
// }
// QFT
// for k in [0..n){
// 	ψ[k] := H(ψ[k]);
// 	for l in [k+1..n){
// 		if ψ[l] && ψ[k]{
// 			phase(2*π * 2^(k-l-1));
// 		}
// 	}
// }