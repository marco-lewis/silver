; benchmark generated from python API
(set-info :status unknown)
(declare-fun x_v0q0.i () Real)
(declare-fun x_v0q0.r () Real)
(declare-fun x_v0q1.i () Real)
(declare-fun x_v0q1.r () Real)
(declare-fun x_v0q2.i () Real)
(declare-fun x_v0q2.r () Real)
(declare-fun x_v0q3.i () Real)
(declare-fun x_v0q3.r () Real)
(declare-fun x_v1q0.i () Real)
(declare-fun x_v1q0.r () Real)
(declare-fun x_v1q1.i () Real)
(declare-fun x_v1q1.r () Real)
(declare-fun x_v1q2.i () Real)
(declare-fun x_v1q2.r () Real)
(declare-fun x_v1q3.i () Real)
(declare-fun x_v1q3.r () Real)
(declare-fun f (Int) Int)
(declare-fun x_v3q0.i () Real)
(declare-fun x_v3q0.r () Real)
(declare-fun x_v3q1.i () Real)
(declare-fun x_v3q1.r () Real)
(declare-fun x_v3q2.i () Real)
(declare-fun x_v3q2.r () Real)
(declare-fun x_v3q3.i () Real)
(declare-fun x_v3q3.r () Real)
(declare-fun x_v4q0.i () Real)
(declare-fun x_v4q0.r () Real)
(declare-fun x_v4q1.i () Real)
(declare-fun x_v4q1.r () Real)
(declare-fun x_v4q2.i () Real)
(declare-fun x_v4q2.r () Real)
(declare-fun x_v4q3.i () Real)
(declare-fun x_v4q3.r () Real)
(declare-fun Pr_x_v4_3 () Real)
(declare-fun Pr_x_v4_2 () Real)
(declare-fun Pr_x_v4_1 () Real)
(declare-fun Pr_x_v4_0 () Real)
(declare-fun Pr_x_v4_sum () Real)
(declare-fun meas_cert () Bool)
(declare-fun meas_x () Int)
(declare-fun x_v0c () Int)
(declare-fun fixed_dj_ret () Int)
(assert
 (and (= x_v0q0.r 1.0) (= 0.0 x_v0q0.i)))
(assert
 (and (= x_v0q1.r 0.0) (= 0.0 x_v0q1.i)))
(assert
 (and (= x_v0q2.r 0.0) (= 0.0 x_v0q2.i)))
(assert
 (and (= x_v0q3.r 0.0) (= 0.0 x_v0q3.i)))
(assert
 (let ((?x214 (* (/ 1.0 2.0) x_v0q3.i)))
 (let ((?x213 (* (/ 1.0 2.0) x_v0q2.i)))
 (let ((?x211 (* (/ 1.0 2.0) x_v0q1.i)))
 (let ((?x210 (* (/ 1.0 2.0) x_v0q0.i)))
 (let ((?x207 (* (/ 1.0 2.0) x_v0q3.r)))
 (let ((?x206 (* (/ 1.0 2.0) x_v0q2.r)))
 (let ((?x204 (* (/ 1.0 2.0) x_v0q1.r)))
 (let ((?x203 (* (/ 1.0 2.0) x_v0q0.r)))
 (and (= x_v1q0.r (+ ?x203 ?x204 ?x206 ?x207)) (= x_v1q0.i (+ ?x210 ?x211 ?x213 ?x214))))))))))))
(assert
 (let ((?x228 (* (- (/ 1.0 2.0)) x_v0q3.i)))
 (let ((?x213 (* (/ 1.0 2.0) x_v0q2.i)))
 (let ((?x226 (* (- (/ 1.0 2.0)) x_v0q1.i)))
 (let ((?x210 (* (/ 1.0 2.0) x_v0q0.i)))
 (let ((?x223 (* (- (/ 1.0 2.0)) x_v0q3.r)))
 (let ((?x206 (* (/ 1.0 2.0) x_v0q2.r)))
 (let ((?x221 (* (- (/ 1.0 2.0)) x_v0q1.r)))
 (let ((?x203 (* (/ 1.0 2.0) x_v0q0.r)))
 (and (= x_v1q1.r (+ ?x203 ?x221 ?x206 ?x223)) (= x_v1q1.i (+ ?x210 ?x226 ?x213 ?x228))))))))))))
(assert
 (let ((?x228 (* (- (/ 1.0 2.0)) x_v0q3.i)))
 (let ((?x234 (* (- (/ 1.0 2.0)) x_v0q2.i)))
 (let ((?x211 (* (/ 1.0 2.0) x_v0q1.i)))
 (let ((?x210 (* (/ 1.0 2.0) x_v0q0.i)))
 (let ((?x223 (* (- (/ 1.0 2.0)) x_v0q3.r)))
 (let ((?x212 (* (- (/ 1.0 2.0)) x_v0q2.r)))
 (let ((?x204 (* (/ 1.0 2.0) x_v0q1.r)))
 (let ((?x203 (* (/ 1.0 2.0) x_v0q0.r)))
 (and (= x_v1q2.r (+ ?x203 ?x204 ?x212 ?x223)) (= x_v1q2.i (+ ?x210 ?x211 ?x234 ?x228))))))))))))
(assert
 (let ((?x214 (* (/ 1.0 2.0) x_v0q3.i)))
 (let ((?x234 (* (- (/ 1.0 2.0)) x_v0q2.i)))
 (let ((?x226 (* (- (/ 1.0 2.0)) x_v0q1.i)))
 (let ((?x210 (* (/ 1.0 2.0) x_v0q0.i)))
 (let ((?x207 (* (/ 1.0 2.0) x_v0q3.r)))
 (let ((?x212 (* (- (/ 1.0 2.0)) x_v0q2.r)))
 (let ((?x221 (* (- (/ 1.0 2.0)) x_v0q1.r)))
 (let ((?x203 (* (/ 1.0 2.0) x_v0q0.r)))
 (and (= x_v1q3.r (+ ?x203 ?x221 ?x212 ?x207)) (= x_v1q3.i (+ ?x210 ?x226 ?x234 ?x214))))))))))))
(assert
 (let ((?x119 (+ 1.0 (* (- 2.0) (ite (= (f 0) 1) 1.0 0.0)))))
 (and (= x_v3q0.r (* x_v1q0.r ?x119)) (= x_v3q0.i (* x_v1q0.i ?x119)))))
(assert
 (let ((?x148 (+ 1.0 (* (- 2.0) (ite (= (f 1) 1) 1.0 0.0)))))
 (and (= x_v3q1.r (* x_v1q1.r ?x148)) (= x_v3q1.i (* x_v1q1.i ?x148)))))
(assert
 (let ((?x107 (+ 1.0 (* (- 2.0) (ite (= (f 2) 1) 1.0 0.0)))))
 (and (= x_v3q2.r (* x_v1q2.r ?x107)) (= x_v3q2.i (* x_v1q2.i ?x107)))))
(assert
 (let ((?x127 (+ 1.0 (* (- 2.0) (ite (= (f 3) 1) 1.0 0.0)))))
 (and (= x_v3q3.r (* x_v1q3.r ?x127)) (= x_v3q3.i (* x_v1q3.i ?x127)))))
(assert
 (let ((?x291 (* (/ 1.0 2.0) x_v3q3.i)))
 (let ((?x281 (* (/ 1.0 2.0) x_v3q2.i)))
 (let ((?x289 (* (/ 1.0 2.0) x_v3q1.i)))
 (let ((?x277 (* (/ 1.0 2.0) x_v3q0.i)))
 (let ((?x273 (* (/ 1.0 2.0) x_v3q3.r)))
 (let ((?x272 (* (/ 1.0 2.0) x_v3q2.r)))
 (let ((?x152 (* (/ 1.0 2.0) x_v3q1.r)))
 (let ((?x268 (* (/ 1.0 2.0) x_v3q0.r)))
 (and (= x_v4q0.r (+ ?x268 ?x152 ?x272 ?x273)) (= x_v4q0.i (+ ?x277 ?x289 ?x281 ?x291))))))))))))
(assert
 (let ((?x282 (* (- (/ 1.0 2.0)) x_v3q3.i)))
 (let ((?x281 (* (/ 1.0 2.0) x_v3q2.i)))
 (let ((?x279 (* (- (/ 1.0 2.0)) x_v3q1.i)))
 (let ((?x277 (* (/ 1.0 2.0) x_v3q0.i)))
 (let ((?x275 (* (- (/ 1.0 2.0)) x_v3q3.r)))
 (let ((?x272 (* (/ 1.0 2.0) x_v3q2.r)))
 (let ((?x286 (* (- (/ 1.0 2.0)) x_v3q1.r)))
 (let ((?x268 (* (/ 1.0 2.0) x_v3q0.r)))
 (and (= x_v4q1.r (+ ?x268 ?x286 ?x272 ?x275)) (= x_v4q1.i (+ ?x277 ?x279 ?x281 ?x282))))))))))))
(assert
 (let ((?x282 (* (- (/ 1.0 2.0)) x_v3q3.i)))
 (let ((?x317 (* (- (/ 1.0 2.0)) x_v3q2.i)))
 (let ((?x289 (* (/ 1.0 2.0) x_v3q1.i)))
 (let ((?x277 (* (/ 1.0 2.0) x_v3q0.i)))
 (let ((?x275 (* (- (/ 1.0 2.0)) x_v3q3.r)))
 (let ((?x280 (* (- (/ 1.0 2.0)) x_v3q2.r)))
 (let ((?x152 (* (/ 1.0 2.0) x_v3q1.r)))
 (let ((?x268 (* (/ 1.0 2.0) x_v3q0.r)))
 (and (= x_v4q2.r (+ ?x268 ?x152 ?x280 ?x275)) (= x_v4q2.i (+ ?x277 ?x289 ?x317 ?x282))))))))))))
(assert
 (let ((?x291 (* (/ 1.0 2.0) x_v3q3.i)))
 (let ((?x317 (* (- (/ 1.0 2.0)) x_v3q2.i)))
 (let ((?x279 (* (- (/ 1.0 2.0)) x_v3q1.i)))
 (let ((?x277 (* (/ 1.0 2.0) x_v3q0.i)))
 (let ((?x273 (* (/ 1.0 2.0) x_v3q3.r)))
 (let ((?x280 (* (- (/ 1.0 2.0)) x_v3q2.r)))
 (let ((?x286 (* (- (/ 1.0 2.0)) x_v3q1.r)))
 (let ((?x268 (* (/ 1.0 2.0) x_v3q0.r)))
 (and (= x_v4q3.r (+ ?x268 ?x286 ?x280 ?x273)) (= x_v4q3.i (+ ?x277 ?x279 ?x317 ?x291))))))))))))
(assert
 (and (and (<= Pr_x_v4_0 1.0) (>= Pr_x_v4_0 0.0)) (and (<= Pr_x_v4_1 1.0) (>= Pr_x_v4_1 0.0)) (and (<= Pr_x_v4_2 1.0) (>= Pr_x_v4_2 0.0)) (and (<= Pr_x_v4_3 1.0) (>= Pr_x_v4_3 0.0))))
(assert
 (= Pr_x_v4_sum (+ Pr_x_v4_0 Pr_x_v4_1 Pr_x_v4_2 Pr_x_v4_3)))
(assert
 (= Pr_x_v4_sum 1.0))
(assert
 (= Pr_x_v4_0 (+ (+ (^ x_v4q0.r 2.0) (^ x_v4q0.i 2.0)))))
(assert
 (= Pr_x_v4_1 (+ (+ (^ x_v4q1.r 2.0) (^ x_v4q1.i 2.0)))))
(assert
 (= Pr_x_v4_2 (+ (+ (^ x_v4q2.r 2.0) (^ x_v4q2.i 2.0)))))
(assert
 (= Pr_x_v4_3 (+ (+ (^ x_v4q3.r 2.0) (^ x_v4q3.i 2.0)))))
(assert
 (let (($x190 (= Pr_x_v4_3 1.0)))
 (let (($x245 (= Pr_x_v4_2 1.0)))
 (let (($x202 (= Pr_x_v4_1 1.0)))
 (let (($x244 (= Pr_x_v4_0 1.0)))
 (let (($x218 (or $x244 $x202 $x245 $x190)))
 (let (($x233 (= meas_cert true)))
 (and (=> $x218 $x233) (=> $x233 $x218)))))))))
(assert
 (and (=> (= Pr_x_v4_0 1.0) (= meas_x 0)) (=> (= meas_x 0) (= Pr_x_v4_0 1.0))))
(assert
 (and (=> (= Pr_x_v4_1 1.0) (= meas_x 1)) (=> (= meas_x 1) (= Pr_x_v4_1 1.0))))
(assert
 (and (=> (= Pr_x_v4_2 1.0) (= meas_x 2)) (=> (= meas_x 2) (= Pr_x_v4_2 1.0))))
(assert
 (and (=> (= Pr_x_v4_3 1.0) (= meas_x 3)) (=> (= meas_x 3) (= Pr_x_v4_3 1.0))))
(assert
 (=> (= Pr_x_v4_0 0.0) (and (distinct meas_x 0) true)))
(assert
 (=> (= Pr_x_v4_1 0.0) (and (distinct meas_x 1) true)))
(assert
 (=> (= Pr_x_v4_2 0.0) (and (distinct meas_x 2) true)))
(assert
 (=> (= Pr_x_v4_3 0.0) (and (distinct meas_x 3) true)))
(assert
 (= x_v0c meas_x))
(assert
 (= fixed_dj_ret x_v0c))
(check-sat)
