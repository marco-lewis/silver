; benchmark generated from python API
(set-info :status unknown)
(declare-fun x_v0q0.i () Real)
(declare-fun x_v0q0.r () Real)
(declare-fun x_v0q1.i () Real)
(declare-fun x_v0q1.r () Real)
(declare-fun x_v0q2.i () Real)
(declare-fun x_v0q2.r () Real)
(declare-fun x_v0q3.i () Real)
(declare-fun x_v0q3.r () Real)
(declare-fun x_v1q0.i () Real)
(declare-fun x_v1q0.r () Real)
(declare-fun x_v1q1.i () Real)
(declare-fun x_v1q1.r () Real)
(declare-fun x_v1q2.i () Real)
(declare-fun x_v1q2.r () Real)
(declare-fun x_v1q3.i () Real)
(declare-fun x_v1q3.r () Real)
(declare-fun f (Int) Int)
(declare-fun x_v3q0.i () Real)
(declare-fun x_v3q0.r () Real)
(declare-fun x_v3q1.i () Real)
(declare-fun x_v3q1.r () Real)
(declare-fun x_v3q2.i () Real)
(declare-fun x_v3q2.r () Real)
(declare-fun x_v3q3.i () Real)
(declare-fun x_v3q3.r () Real)
(declare-fun x_v4q0.i () Real)
(declare-fun x_v4q0.r () Real)
(declare-fun x_v4q1.i () Real)
(declare-fun x_v4q1.r () Real)
(declare-fun x_v4q2.i () Real)
(declare-fun x_v4q2.r () Real)
(declare-fun x_v4q3.i () Real)
(declare-fun x_v4q3.r () Real)
(declare-fun x_v6q0.i () Real)
(declare-fun x_v6q0.r () Real)
(declare-fun x_v6q1.i () Real)
(declare-fun x_v6q1.r () Real)
(declare-fun x_v6q2.i () Real)
(declare-fun x_v6q2.r () Real)
(declare-fun x_v6q3.i () Real)
(declare-fun x_v6q3.r () Real)
(declare-fun x_v7q0.i () Real)
(declare-fun x_v7q0.r () Real)
(declare-fun x_v7q1.i () Real)
(declare-fun x_v7q1.r () Real)
(declare-fun x_v7q2.i () Real)
(declare-fun x_v7q2.r () Real)
(declare-fun x_v7q3.i () Real)
(declare-fun x_v7q3.r () Real)
(declare-fun Pr_x_v7_3 () Real)
(declare-fun Pr_x_v7_2 () Real)
(declare-fun Pr_x_v7_1 () Real)
(declare-fun Pr_x_v7_0 () Real)
(declare-fun Pr_x_v7_sum () Real)
(declare-fun meas_cert () Bool)
(declare-fun meas_x () Int)
(declare-fun x_v0c () Int)
(declare-fun grover_fixed_ret () Int)
(assert
 (and (= x_v0q0.r 1.0) (= 0.0 x_v0q0.i)))
(assert
 (and (= x_v0q1.r 0.0) (= 0.0 x_v0q1.i)))
(assert
 (and (= x_v0q2.r 0.0) (= 0.0 x_v0q2.i)))
(assert
 (and (= x_v0q3.r 0.0) (= 0.0 x_v0q3.i)))
(assert
 (let ((?x5312 (* (/ 1.0 2.0) x_v0q3.i)))
 (let ((?x847 (* (/ 1.0 2.0) x_v0q2.i)))
 (let ((?x6660 (* (/ 1.0 2.0) x_v0q1.i)))
 (let ((?x8265 (* (/ 1.0 2.0) x_v0q0.i)))
 (let ((?x8330 (* (/ 1.0 2.0) x_v0q3.r)))
 (let ((?x8121 (* (/ 1.0 2.0) x_v0q2.r)))
 (let ((?x888 (* (/ 1.0 2.0) x_v0q1.r)))
 (let ((?x930 (* (/ 1.0 2.0) x_v0q0.r)))
 (and (= x_v1q0.r (+ ?x930 ?x888 ?x8121 ?x8330)) (= x_v1q0.i (+ ?x8265 ?x6660 ?x847 ?x5312))))))))))))
(assert
 (let ((?x8877 (* (- (/ 1.0 2.0)) x_v0q3.i)))
 (let ((?x847 (* (/ 1.0 2.0) x_v0q2.i)))
 (let ((?x7720 (* (- (/ 1.0 2.0)) x_v0q1.i)))
 (let ((?x8265 (* (/ 1.0 2.0) x_v0q0.i)))
 (let ((?x11517 (* (- (/ 1.0 2.0)) x_v0q3.r)))
 (let ((?x8121 (* (/ 1.0 2.0) x_v0q2.r)))
 (let ((?x8782 (* (- (/ 1.0 2.0)) x_v0q1.r)))
 (let ((?x930 (* (/ 1.0 2.0) x_v0q0.r)))
 (and (= x_v1q1.r (+ ?x930 ?x8782 ?x8121 ?x11517)) (= x_v1q1.i (+ ?x8265 ?x7720 ?x847 ?x8877))))))))))))
(assert
 (let ((?x8877 (* (- (/ 1.0 2.0)) x_v0q3.i)))
 (let ((?x5125 (* (- (/ 1.0 2.0)) x_v0q2.i)))
 (let ((?x6660 (* (/ 1.0 2.0) x_v0q1.i)))
 (let ((?x8265 (* (/ 1.0 2.0) x_v0q0.i)))
 (let ((?x11517 (* (- (/ 1.0 2.0)) x_v0q3.r)))
 (let ((?x8623 (* (- (/ 1.0 2.0)) x_v0q2.r)))
 (let ((?x888 (* (/ 1.0 2.0) x_v0q1.r)))
 (let ((?x930 (* (/ 1.0 2.0) x_v0q0.r)))
 (and (= x_v1q2.r (+ ?x930 ?x888 ?x8623 ?x11517)) (= x_v1q2.i (+ ?x8265 ?x6660 ?x5125 ?x8877))))))))))))
(assert
 (let ((?x5312 (* (/ 1.0 2.0) x_v0q3.i)))
 (let ((?x5125 (* (- (/ 1.0 2.0)) x_v0q2.i)))
 (let ((?x7720 (* (- (/ 1.0 2.0)) x_v0q1.i)))
 (let ((?x8265 (* (/ 1.0 2.0) x_v0q0.i)))
 (let ((?x8330 (* (/ 1.0 2.0) x_v0q3.r)))
 (let ((?x8623 (* (- (/ 1.0 2.0)) x_v0q2.r)))
 (let ((?x8782 (* (- (/ 1.0 2.0)) x_v0q1.r)))
 (let ((?x930 (* (/ 1.0 2.0) x_v0q0.r)))
 (and (= x_v1q3.r (+ ?x930 ?x8782 ?x8623 ?x8330)) (= x_v1q3.i (+ ?x8265 ?x7720 ?x5125 ?x5312))))))))))))
(assert
 (let ((?x8236 (+ 1.0 (* (- 2.0) (ite (= (f 0) 1) 1.0 0.0)))))
 (and (= x_v3q0.r (* x_v1q0.r ?x8236)) (= x_v3q0.i (* x_v1q0.i ?x8236)))))
(assert
 (let ((?x9010 (+ 1.0 (* (- 2.0) (ite (= (f 1) 1) 1.0 0.0)))))
 (and (= x_v3q1.r (* x_v1q1.r ?x9010)) (= x_v3q1.i (* x_v1q1.i ?x9010)))))
(assert
 (let ((?x11989 (+ 1.0 (* (- 2.0) (ite (= (f 2) 1) 1.0 0.0)))))
 (and (= x_v3q2.r (* x_v1q2.r ?x11989)) (= x_v3q2.i (* x_v1q2.i ?x11989)))))
(assert
 (let ((?x4909 (+ 1.0 (* (- 2.0) (ite (= (f 3) 1) 1.0 0.0)))))
 (and (= x_v3q3.r (* x_v1q3.r ?x4909)) (= x_v3q3.i (* x_v1q3.i ?x4909)))))
(assert
 (let ((?x928 (* (/ 1.0 2.0) x_v3q3.i)))
 (let ((?x7813 (* (/ 1.0 2.0) x_v3q2.i)))
 (let ((?x5287 (* (/ 1.0 2.0) x_v3q1.i)))
 (let ((?x6120 (* (/ 1.0 2.0) x_v3q0.i)))
 (let ((?x6148 (* (/ 1.0 2.0) x_v3q3.r)))
 (let ((?x487 (* (/ 1.0 2.0) x_v3q2.r)))
 (let ((?x5168 (* (/ 1.0 2.0) x_v3q1.r)))
 (let ((?x280 (* (/ 1.0 2.0) x_v3q0.r)))
 (and (= x_v4q0.r (+ ?x280 ?x5168 ?x487 ?x6148)) (= x_v4q0.i (+ ?x6120 ?x5287 ?x7813 ?x928))))))))))))
(assert
 (let ((?x8667 (* (- (/ 1.0 2.0)) x_v3q3.i)))
 (let ((?x7813 (* (/ 1.0 2.0) x_v3q2.i)))
 (let ((?x8117 (* (- (/ 1.0 2.0)) x_v3q1.i)))
 (let ((?x6120 (* (/ 1.0 2.0) x_v3q0.i)))
 (let ((?x6160 (* (- (/ 1.0 2.0)) x_v3q3.r)))
 (let ((?x487 (* (/ 1.0 2.0) x_v3q2.r)))
 (let ((?x7040 (* (- (/ 1.0 2.0)) x_v3q1.r)))
 (let ((?x280 (* (/ 1.0 2.0) x_v3q0.r)))
 (and (= x_v4q1.r (+ ?x280 ?x7040 ?x487 ?x6160)) (= x_v4q1.i (+ ?x6120 ?x8117 ?x7813 ?x8667))))))))))))
(assert
 (let ((?x8667 (* (- (/ 1.0 2.0)) x_v3q3.i)))
 (let ((?x8604 (* (- (/ 1.0 2.0)) x_v3q2.i)))
 (let ((?x5287 (* (/ 1.0 2.0) x_v3q1.i)))
 (let ((?x6120 (* (/ 1.0 2.0) x_v3q0.i)))
 (let ((?x6160 (* (- (/ 1.0 2.0)) x_v3q3.r)))
 (let ((?x977 (* (- (/ 1.0 2.0)) x_v3q2.r)))
 (let ((?x5168 (* (/ 1.0 2.0) x_v3q1.r)))
 (let ((?x280 (* (/ 1.0 2.0) x_v3q0.r)))
 (and (= x_v4q2.r (+ ?x280 ?x5168 ?x977 ?x6160)) (= x_v4q2.i (+ ?x6120 ?x5287 ?x8604 ?x8667))))))))))))
(assert
 (let ((?x928 (* (/ 1.0 2.0) x_v3q3.i)))
 (let ((?x8604 (* (- (/ 1.0 2.0)) x_v3q2.i)))
 (let ((?x8117 (* (- (/ 1.0 2.0)) x_v3q1.i)))
 (let ((?x6120 (* (/ 1.0 2.0) x_v3q0.i)))
 (let ((?x6148 (* (/ 1.0 2.0) x_v3q3.r)))
 (let ((?x977 (* (- (/ 1.0 2.0)) x_v3q2.r)))
 (let ((?x7040 (* (- (/ 1.0 2.0)) x_v3q1.r)))
 (let ((?x280 (* (/ 1.0 2.0) x_v3q0.r)))
 (and (= x_v4q3.r (+ ?x280 ?x7040 ?x977 ?x6148)) (= x_v4q3.i (+ ?x6120 ?x8117 ?x8604 ?x928))))))))))))
(assert
 (and (= x_v6q0.r x_v4q0.r) (= x_v6q0.i x_v4q0.i)))
(assert
 (and (= x_v6q1.r (* (- 1.0) x_v4q1.r)) (= x_v6q1.i (* (- 1.0) x_v4q1.i))))
(assert
 (and (= x_v6q2.r (* (- 1.0) x_v4q2.r)) (= x_v6q2.i (* (- 1.0) x_v4q2.i))))
(assert
 (and (= x_v6q3.r (* (- 1.0) x_v4q3.r)) (= x_v6q3.i (* (- 1.0) x_v4q3.i))))
(assert
 (let ((?x902 (* (/ 1.0 2.0) x_v6q3.i)))
 (let ((?x876 (* (/ 1.0 2.0) x_v6q2.i)))
 (let ((?x773 (* (/ 1.0 2.0) x_v6q1.i)))
 (let ((?x12047 (* (/ 1.0 2.0) x_v6q0.i)))
 (let ((?x4867 (* (/ 1.0 2.0) x_v6q3.r)))
 (let ((?x6016 (* (/ 1.0 2.0) x_v6q2.r)))
 (let ((?x8514 (* (/ 1.0 2.0) x_v6q1.r)))
 (let ((?x8660 (* (/ 1.0 2.0) x_v6q0.r)))
 (and (= x_v7q0.r (+ ?x8660 ?x8514 ?x6016 ?x4867)) (= x_v7q0.i (+ ?x12047 ?x773 ?x876 ?x902))))))))))))
(assert
 (let ((?x8120 (* (- (/ 1.0 2.0)) x_v6q3.i)))
 (let ((?x876 (* (/ 1.0 2.0) x_v6q2.i)))
 (let ((?x8799 (* (- (/ 1.0 2.0)) x_v6q1.i)))
 (let ((?x12047 (* (/ 1.0 2.0) x_v6q0.i)))
 (let ((?x8026 (* (- (/ 1.0 2.0)) x_v6q3.r)))
 (let ((?x6016 (* (/ 1.0 2.0) x_v6q2.r)))
 (let ((?x354 (* (- (/ 1.0 2.0)) x_v6q1.r)))
 (let ((?x8660 (* (/ 1.0 2.0) x_v6q0.r)))
 (and (= x_v7q1.r (+ ?x8660 ?x354 ?x6016 ?x8026)) (= x_v7q1.i (+ ?x12047 ?x8799 ?x876 ?x8120))))))))))))
(assert
 (let ((?x8120 (* (- (/ 1.0 2.0)) x_v6q3.i)))
 (let ((?x7825 (* (- (/ 1.0 2.0)) x_v6q2.i)))
 (let ((?x773 (* (/ 1.0 2.0) x_v6q1.i)))
 (let ((?x12047 (* (/ 1.0 2.0) x_v6q0.i)))
 (let ((?x8026 (* (- (/ 1.0 2.0)) x_v6q3.r)))
 (let ((?x4865 (* (- (/ 1.0 2.0)) x_v6q2.r)))
 (let ((?x8514 (* (/ 1.0 2.0) x_v6q1.r)))
 (let ((?x8660 (* (/ 1.0 2.0) x_v6q0.r)))
 (and (= x_v7q2.r (+ ?x8660 ?x8514 ?x4865 ?x8026)) (= x_v7q2.i (+ ?x12047 ?x773 ?x7825 ?x8120))))))))))))
(assert
 (let ((?x902 (* (/ 1.0 2.0) x_v6q3.i)))
 (let ((?x7825 (* (- (/ 1.0 2.0)) x_v6q2.i)))
 (let ((?x8799 (* (- (/ 1.0 2.0)) x_v6q1.i)))
 (let ((?x12047 (* (/ 1.0 2.0) x_v6q0.i)))
 (let ((?x4867 (* (/ 1.0 2.0) x_v6q3.r)))
 (let ((?x4865 (* (- (/ 1.0 2.0)) x_v6q2.r)))
 (let ((?x354 (* (- (/ 1.0 2.0)) x_v6q1.r)))
 (let ((?x8660 (* (/ 1.0 2.0) x_v6q0.r)))
 (and (= x_v7q3.r (+ ?x8660 ?x354 ?x4865 ?x4867)) (= x_v7q3.i (+ ?x12047 ?x8799 ?x7825 ?x902))))))))))))
(assert
 (and (and (<= Pr_x_v7_0 1.0) (>= Pr_x_v7_0 0.0)) (and (<= Pr_x_v7_1 1.0) (>= Pr_x_v7_1 0.0)) (and (<= Pr_x_v7_2 1.0) (>= Pr_x_v7_2 0.0)) (and (<= Pr_x_v7_3 1.0) (>= Pr_x_v7_3 0.0))))
(assert
 (= Pr_x_v7_sum (+ Pr_x_v7_0 Pr_x_v7_1 Pr_x_v7_2 Pr_x_v7_3)))
(assert
 (= Pr_x_v7_sum 1.0))
(assert
 (= Pr_x_v7_0 (+ (+ (^ x_v7q0.r 2.0) (^ x_v7q0.i 2.0)))))
(assert
 (= Pr_x_v7_1 (+ (+ (^ x_v7q1.r 2.0) (^ x_v7q1.i 2.0)))))
(assert
 (= Pr_x_v7_2 (+ (+ (^ x_v7q2.r 2.0) (^ x_v7q2.i 2.0)))))
(assert
 (= Pr_x_v7_3 (+ (+ (^ x_v7q3.r 2.0) (^ x_v7q3.i 2.0)))))
(assert
 (let (($x4828 (= Pr_x_v7_3 1.0)))
 (let (($x321 (= Pr_x_v7_2 1.0)))
 (let (($x5094 (= Pr_x_v7_1 1.0)))
 (let (($x979 (= Pr_x_v7_0 1.0)))
 (let (($x131 (or $x979 $x5094 $x321 $x4828)))
 (let (($x6241 (= meas_cert true)))
 (and (=> $x131 $x6241) (=> $x6241 $x131)))))))))
(assert
 (and (=> (= Pr_x_v7_0 1.0) (= meas_x 0)) (=> (= meas_x 0) (= Pr_x_v7_0 1.0))))
(assert
 (and (=> (= Pr_x_v7_1 1.0) (= meas_x 1)) (=> (= meas_x 1) (= Pr_x_v7_1 1.0))))
(assert
 (and (=> (= Pr_x_v7_2 1.0) (= meas_x 2)) (=> (= meas_x 2) (= Pr_x_v7_2 1.0))))
(assert
 (and (=> (= Pr_x_v7_3 1.0) (= meas_x 3)) (=> (= meas_x 3) (= Pr_x_v7_3 1.0))))
(assert
 (=> (= Pr_x_v7_0 0.0) (and (distinct meas_x 0) true)))
(assert
 (=> (= Pr_x_v7_1 0.0) (and (distinct meas_x 1) true)))
(assert
 (=> (= Pr_x_v7_2 0.0) (and (distinct meas_x 2) true)))
(assert
 (=> (= Pr_x_v7_3 0.0) (and (distinct meas_x 3) true)))
(assert
 (= x_v0c meas_x))
(assert
 (= grover_fixed_ret x_v0c))
(check-sat)
